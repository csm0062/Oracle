-- 1. CONSTRAINT(제약조건): 제약조건은 데이터의 정확성과 무결성을 보장해주는  데이터를 저장하는 규칙
--						 제약조건에는 PK, FK, UK, NOT NULL, DEFAULT, CHECK 등이 존재한다.
-- 1-1. PK(PRIMARY KEY): 테이블에 식별자 역할을 하는 컬럼을 지정
--						 PK로 지정된 컬럼의 데이터는 유일해야 하며(UK), 색인 역할도 하며(INDEX),
--					     NULL값이 저장될 수 없다(NOT NULL).
-- 단일 칼럼 PK인 테이블 생성
CREATE TABLE EMP_PK1 (
--	
	EMP NUMBER(4) PRIMARY KEY,
	ENAME VARCHAR2(20),
	JOB VARCHAR2(10),
	HDATE DATE,
	DNO NUMBER(2)
);

-- PK로 설정된 컬럼의 데이터는 유일한 값(UK)을 가져야 하기 떄문에 중복된 데이터를 저장할 수 없다.
INSERT INTO EMP_PK1 
VALUES (1, '고기천', '개발', SYSDATE, 1);
COMMIT;

INSERT INTO EMP_PK1 
VALUES (1, '임꺽정', '분석', SYSDATE, 2);

-- PK로 설정된 데이터는 NULL 값을 가질수 없다.(NOT NULL)
INSERT INTO EMP_PK1 
VALUES (NULL, '임꺽정', '분석', SYSDATE, 2);

INSERT INTO EMP
VALUES (NULL, '임꺽정', '회계',NULL, SYSDATE, 5000, 600, NULL);
INSERT INTO EMP
VALUES ('9999', '임꺽정', '회계',NULL, SYSDATE, 5000, 600, NULL);
COMMIT;

-- 제약조건명을 달아서 PK 생성
CREATE TABLE STUDENT_PK1(
	SNO NUMBER(6) CONSTRAINT STUDENT_SNO_PK PRIMARY KEY,
	SNAME VARCHAR2(20),
	MAJOR VARCHAR2(10),
	SYEAR NUMBER(1)
);

-- 테이블을 생성하면서 컬럼을 모두 지정 후에 PK 지정
CREATE TABLE DEPT_PK1(
	DNO NUMBER(2),
	SNAME VARCHAR2(10),
	LOC VARCHAR2(10),
	DIRECTOR NUMBER(4),
	CONSTRAINT DEPT_DNO_PK PRIMARY KEY(DNO)
);

-- 다중 컬럼 PK 지정
-- 모든 테이블에서 PK는 한 번만 지정할 수 있다.
CREATE TABLE PROFESSOR_PK1(
	PNO NUMBER(4),
	PNAME VARCHAR2(20),
	SECTION VARCHAR2(10),
	ORDERS VARCHAR2(10),
	HIREDATE DATE,
	CONSTRAINT PK_PROFESSOR_PNO_PNAME PRIMARY KEY(PNO, PNAME)
);

-- 다중 컬럼으로 PK를 지정하게 되면 PK로 지정된 컬럼들을 데이터 셋으로 묶어서 PK로 인식한다.
-- PK로 지정된 컬럼들의 데이터 모두 중복돼야 중복으로 인식한다.
INSERT INTO PROFESSOR_PK1
VALUES (1, '고기천', '화학', '정교수', SYSDATE);
COMMIT;

INSERT INTO PROFESSOR_PK1
VALUES (1, '홍길동', '생물', '부교수', SYSDATE);
COMMIT;

-- PK로 지정된 모든 컬럼에 NULL 값은 허용되지 않는다.
INSERT INTO PROFESSOR_PK1
VALUES (1, '고기천', '물리', '부교수', SYSDATE);

INSERT INTO PROFESSOR_PK1
VALUES (2, NULL, '물리', '부교수', SYSDATE);

CREATE TABLE BOARD (
	BOARD_NO NUMBER(10),
	BOARD_TITLE VARCHAR2(1000),
	CONSTRAINT PK_BOARD_BOARD_N0 PRIMARY KEY(BOARD_NO)
);

CREATE TABLE BOARD_FILE (
	BOARD_NO NUMBER(10),
	BOARD_FILE_NO NUMBER(10),
	BOARD_TITLE VARCHAR2(1000),
	CONSTRAINT PK_BOARD_FILE_FILE_N0 PRIMARY KEY(BOARD_NO)
);

INSERT INTO BOARD
VALUES(1, '게시글 1');

INSERT INTO BOARD
VALUES(2, '게시글 2');
COMMIT;

INSERT INTO BOARD_FILE
VALUES (1, 1, '게시글1 - 첨부파일1');

INSERT INTO BOARD_FILE
VALUES (1, 2, '게시글1 - 첨부파일2');
COMMIT;

INSERT INTO BOARD_FILE
VALUES (2, 3, '게시글2 - 첨부파일1');

INSERT INTO BOARD_FILE
VALUES (2, 1, '게시글2 - 첨부파일1');
COMMIT;

CREATE TABLE BOARD_FILE_MULTIPK(
	BOARD_NO NUMBER(10),
	BOARD_FILE_NO NUMBER(10),
	BOARD_FILE_NAME VARCHAR2(1000),
	CONSTRAINT PK_BOARD_FILE_BOARD_FILE_NO PRIMARY KEY(BOARD_NO, BOARD_FILE_NO)
);

INSERT INTO BOARD_FILE_MULTIPK
VALUES (1, 1, '게시글1 - 첨부파일1');

INSERT INTO BOARD_FILE_MULTIPK
VALUES (1, 2, '게시글1 - 첨부파일2');

INSERT INTO BOARD_FILE_MULTIPK
VALUES (2, 1, '게시글2 - 첨부파일1');

INSERT INTO BOARD_FILE_MULTIPK
VALUES (2, 2, '게시글2 - 첨부파일1');
COMMIT;

-- 기존 테이블에 PK추가
-- 기존 테이블의 구조를 변경하는 작업이라 ALTER TABLE 구문을 사용한다.
-- PK로 지정할 컬럼의 데이터에 중복값이나 NULL값이 없어야 된다.
ALTER TABLE PROFESSOR 
	ADD CONSTRAINT PK_PROFESSOR_PNO PRIMARY KEY(PNO);

-- 기존 테이블에 다중컬럼 PK 추가
ALTER TABLE SCORE
	ADD CONSTRAINT PK_SCORE_SNO_CNO PRIMARY KEY(SNO, CNO);

-- PK 삭제
-- ALTER TABLE 구문을 이용
-- 제약조건명을 이용한 삭제
ALTER TABLE SCORE
	DROP CONSTRAINT PK_SCORE_SNO_CNO;

-- 제약조건명 없이 삭제
ALTER TABLE PROFESSOR
	DROP PRIMARY KEY;





















































